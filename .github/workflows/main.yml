name: ci
on:
  push:
    branches:
      - 'main'
jobs:
  test:
    runs-on: ubuntu-latest
    container:
      image: node
    steps:
      - uses: actions/checkout@v3.0.2
      - name: Install dependencies
        working-directory: ./client
        run: |
          npm install
          npm ci
      - name: Run tests
        working-directory: ./client
        run: |
          npm run build
          npm run test
  build:
    runs-on: ubuntu-latest
    needs: test
    steps:
      -
        name: Checkout
        uses: actions/checkout@v3.0.2
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
        with:
          install: true
          buildkitd-flags: --debug
      -
        name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_TOKEN }}
      -
        name: Build and push client
        uses: docker/build-push-action@v3
        with:
          context: client
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/multi-client
      -
        name: Build and push nginx
        uses: docker/build-push-action@v3
        with:
          context: nginx
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/multi-nginx
      -
        name: Build and push server
        uses: docker/build-push-action@v3
        with:
          context: server
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/multi-server
      -
        name: Build and push worker
        uses: docker/build-push-action@v3
        with:
          context: worker
          builder: ${{ steps.buildx.outputs.name }}
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/multi-worker
      -
        name: Generate deployment package
        run: zip -r deploy.zip . -x '*.git*'
      -
        name: Deploy to EB
        uses: einaregilsson/beanstalk-deploy@v21
        with:
          aws_access_key: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws_secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          application_name: multi-docker
          environment_name: multi-docker-ebs
          version_label: 1234
          region: ap-southeast-2
          deployment_package: deploy.zip